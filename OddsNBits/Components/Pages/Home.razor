@page "/"
@using OddsNBits.Data.Entities


@inject IPostService PostService

<PageTitle>Odds &amp; Bits</PageTitle>

<!--------------------------------------
HEADER
--------------------------------------->
@if(_firstFeatured is not null)
{
    <div class="container">
        <div class="jumbotron jumbotron-fluid mb-3 pt-0 pb-0 position-relative bg-lightteal">
            <div class="pl-4 pr-0 h-100 tofront">
                <div class="row justify-content-between">
                    <div class="col-md-6 pt-6 pb-6 align-self-center">
                        <h1 class="secondfont mb-3 font-weight-bold">@_firstFeatured.Title</h1>
                        <p class="mb-3">
                            @_firstFeatured.Introduction
                        </p>
                        <NavLink href="@($"/posts/{_firstFeatured.Slug}")" class="btn btn-dark">Read More</NavLink>
                    </div>
                    <div class="col-md-6 d-none d-md-block pr-0" style="background-size: cover; background-image: url(@_firstFeatured.Image);"> </div>
                </div>
            </div>
        </div>
    </div>
}
<!-- End Header -->
<!--------------------------------------
MAIN
--------------------------------------->
<div class="container pt-4 pb-4">
    <BlogListBlock Posts="_featured" />
</div>
<hr />
<div class="container">
    <div class="row justify-content-between">
        <div class="col-md-8">
            <h5 class="font-weight-bold spanborder"><span>Latest Posts</span></h5>
            <BlogList Posts="_latest"/>
        </div>
        <div class="col-md-4 pl-4">
            <h5 class="font-weight-bold spanborder"><span>Most Read</span></h5>
            <RankedList Posts="_popular"/>
        </div>
    </div>
    @* <h5 class="font-weight-bold spanborder"><span>Latest Posts</span></h5> *@
    @* <BlogList Columns="2" Count="3" /> *@
    @* <hr /> *@
    @* <h5 class="font-weight-bold spanborder"><span>Featured Posts</span></h5> *@
    @* <BlogListBlock Posts="_featured" /> *@
</div>

@code
{
    private BlogPost[] _featured = [];
    private BlogPost[] _latest = [];
    private BlogPost[] _popular = [];

    private BlogPost? _firstFeatured;

    protected override async Task OnInitializedAsync()
    {
        var posts = await Task.WhenAll(
            PostService.GetFeaturedAsync(5),
                PostService.GetLatestAsync(5),
                PostService.GetPopularAsync(4)
            );
        _featured = posts[0];
        _latest = posts[1];
        _popular = posts[2];

        _firstFeatured = _featured.First();
        _featured = _featured.Skip(1).ToArray();
    }
}
